{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.component.ts","./src/app/auth/auth.component.html","./src/app/auth/auth.module.ts","./src/app/auth/company-sign-up/company-sign-up.component.ts","./src/app/auth/company-sign-up/company-sign-up.component.html","./src/app/auth/company-sign-up/step1/step1.component.ts","./src/app/auth/company-sign-up/step1/step1.component.html","./src/app/auth/company-sign-up/step2/step2.component.ts","./src/app/auth/company-sign-up/step2/step2.component.html","./src/app/auth/company-sign-up/step3/step3.component.ts","./src/app/auth/company-sign-up/step3/step3.component.html","./src/app/auth/new-password/new-password.component.ts","./src/app/auth/new-password/new-password.component.html","./src/app/auth/receive-code/receive-code.component.ts","./src/app/auth/receive-code/receive-code.component.html","./src/app/auth/reset-password/reset-password.component.ts","./src/app/auth/reset-password/reset-password.component.html","./src/app/auth/sent-email/sent-email.component.ts","./src/app/auth/sent-email/sent-email.component.html","./src/app/auth/submitted-password/submitted-password.component.ts","./src/app/auth/submitted-password/submitted-password.component.html","./src/app/auth/user-sign-up/user-sign-up.component.ts","./src/app/auth/user-sign-up/user-sign-up.component.html","./src/app/core/constants/countries.ts","./src/app/core/constants/industries.ts","./src/app/core/helpers/password-confirmation.ts","./src/app/core/services/companies.service.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import {NgModule} from '@angular/core';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport {UserSignUpComponent} from './user-sign-up/user-sign-up.component';\r\nimport {CompanySignUpComponent} from './company-sign-up/company-sign-up.component';\r\nimport {LoginComponent} from './login/login.component';\r\nimport {ResetPasswordComponent} from './reset-password/reset-password.component';\r\nimport {SentEmailComponent} from './sent-email/sent-email.component';\r\nimport {NewPasswordComponent} from './new-password/new-password.component';\r\nimport {SubmittedPasswordComponent} from './submitted-password/submitted-password.component';\r\nimport {ReceiveCodeComponent} from './receive-code/receive-code.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'login',\r\n    component: LoginComponent\r\n  },\r\n  {\r\n    path: 'user-registration',\r\n    component: UserSignUpComponent\r\n  },\r\n  {\r\n    path: 'company-registration',\r\n    component: CompanySignUpComponent\r\n  },\r\n  {\r\n    path: 'reset-password',\r\n    component: ResetPasswordComponent\r\n  },\r\n  {\r\n    path: 'sent-email',\r\n    component: SentEmailComponent\r\n  },\r\n  {\r\n    path: 'new-password',\r\n    component: NewPasswordComponent\r\n  },\r\n  {\r\n    path: 'submitted-password',\r\n    component: SubmittedPasswordComponent\r\n  },\r\n  {\r\n    path: 'receive-code',\r\n    component: ReceiveCodeComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule {\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<p>auth works!</p>\r\n","import {NgModule} from '@angular/core';\r\nimport {CommonModule} from '@angular/common';\r\n\r\nimport {AuthRoutingModule} from './auth-routing.module';\r\nimport {UserSignUpComponent} from './user-sign-up/user-sign-up.component';\r\nimport {CompanySignUpComponent} from './company-sign-up/company-sign-up.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {Step1Component} from './company-sign-up/step1/step1.component';\r\nimport {Step2Component} from './company-sign-up/step2/step2.component';\r\nimport {Step3Component} from './company-sign-up/step3/step3.component';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {ResetPasswordComponent} from './reset-password/reset-password.component';\r\nimport {SentEmailComponent} from './sent-email/sent-email.component';\r\nimport {NewPasswordComponent} from './new-password/new-password.component';\r\nimport {SubmittedPasswordComponent} from './submitted-password/submitted-password.component';\r\nimport {AuthComponent} from './auth.component';\r\nimport {ReceiveCodeComponent} from './receive-code/receive-code.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserSignUpComponent,\r\n    CompanySignUpComponent,\r\n    Step1Component,\r\n    Step2Component,\r\n    Step3Component,\r\n    ResetPasswordComponent,\r\n    SentEmailComponent,\r\n    NewPasswordComponent,\r\n    SubmittedPasswordComponent,\r\n    AuthComponent,\r\n    ReceiveCodeComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule,\r\n    SharedModule,\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  providers: []\r\n})\r\nexport class AuthModule {\r\n}\r\n","import {Component, OnInit, ViewChild} from '@angular/core';\r\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {CompaniesService} from '../../core/services/companies.service';\r\nimport {Router} from '@angular/router';\r\nimport {ToastrService} from 'ngx-toastr';\r\nimport {patternValidator} from '../../core/helpers/pattern-validator';\r\nimport {API_URL, EMAIL_PATTERN} from '../../core/constants/general';\r\nimport {MatStepper} from '@angular/material/stepper';\r\n\r\n@Component({\r\n  selector: 'app-company-sign-up',\r\n  templateUrl: './company-sign-up.component.html',\r\n  styleUrls: ['./company-sign-up.component.css']\r\n})\r\nexport class CompanySignUpComponent implements OnInit {\r\n  companyRegistrationForm: FormGroup;\r\n  currentStep = 1;\r\n  isSubmitted = false;\r\n  isLinear = true;\r\n  companyInfo: FormGroup;\r\n  accountInfo: FormGroup;\r\n  contactDetails: FormGroup;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private companiesService: CompaniesService,\r\n    public router: Router,\r\n    private toastr: ToastrService\r\n  ) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.initForm();\r\n  }\r\n\r\n  initForm() {\r\n    this.companyInfo = this.fb.group({\r\n      name: ['', [Validators.required]],\r\n      industry: ['', Validators.required],\r\n      country: ['', Validators.required],\r\n    });\r\n    this.accountInfo = this.fb.group({\r\n      first_name: ['', Validators.required],\r\n      last_name: ['', Validators.required],\r\n      password: ['', Validators.required],\r\n      gender: ['', Validators.required],\r\n    });\r\n\r\n    this.contactDetails = this.fb.group({\r\n      phone: ['', Validators.required],\r\n      email: new FormControl(null, {\r\n        validators: [Validators.required, patternValidator(EMAIL_PATTERN)]\r\n      }),\r\n      address: ['', Validators.required],\r\n    });\r\n\r\n    this.companyRegistrationForm = this.fb.group({\r\n      companyInfo: this.companyInfo,\r\n      accountInfo: this.accountInfo,\r\n      contactDetails: this.contactDetails\r\n    });\r\n  }\r\n\r\n  stepChanged(e) {\r\n\r\n  }\r\n\r\n  registerCompany() {\r\n    if (this.companyRegistrationForm.valid) {\r\n\r\n      this.companiesService.register(this.companyRegistrationForm.getRawValue()).subscribe((dt: any) => {\r\n        this.router.navigate(['/']);\r\n        this.toastr.success('The company has been successfully registered and you are logged in');\r\n        localStorage.setItem('token', dt.token);\r\n      });\r\n    }\r\n  }\r\n\r\n  getGoogleAuthUrl() {\r\n    return `${API_URL}auth/google`;\r\n  }\r\n\r\n}\r\n","<section class=\"register-content\">\r\n  <div class=\"register-left-side\">\r\n    <img class=\"register-big-img\" src=\"assets/images/login-1.svg\" (click)=\"router.navigate(['/'])\">\r\n    <div class=\"left-block-4\">\r\n      <div (click)=\"router.navigate(['auth/user-registration'])\">\r\n        <img src=\"assets/images/img-30.svg\">\r\n        <div class=\"left-block-5\">\r\n          <p class=\"login-text-5\">Private</p>\r\n          <p class=\"login-text-8\">Personal</p>\r\n        </div>\r\n      </div>\r\n      <img src=\"assets/images/img-31.svg\">\r\n    </div>\r\n    <div class=\"left-block-4 active\">\r\n      <div (click)=\"router.navigate(['auth/company-registration'])\">\r\n        <img src=\"assets/images/img-32.svg\">\r\n        <div class=\"left-block-5\">\r\n          <p class=\"login-text-5\">Company</p>\r\n          <p class=\"login-text-8\">Business</p>\r\n        </div>\r\n      </div>\r\n      <img src=\"assets/images/img-31.svg\">\r\n    </div>\r\n  </div>\r\n  <div class=\"register-right-side\">\r\n    <p class=\"register-text-1\">Don't have an account ?\r\n      <a class=\"login-text-2\" (click)=\"router.navigate(['auth/user-registration'])\">Sign In Here</a>\r\n    </p>\r\n    <div class=\"register-form\">\r\n      <p class=\"login-text-3\">Sign Up</p>\r\n      <p class=\"login-text-4\">Choose the versions of Sign Up.</p>\r\n      <div class=\"login-block-1 mb-4\">\r\n        <a class=\"login-google\" [href]=\"getGoogleAuthUrl()\"><i class=\"fab fa-google\"></i> Sign Up With Google</a>\r\n      </div>\r\n      <p class=\"login-text-7\">Company</p>\r\n      <div class=\"line-block\">\r\n        <span class=\"line-1\"></span>\r\n        <span>OR</span>\r\n        <span class=\"line-1\"></span>\r\n      </div>\r\n      <div>\r\n        <form [formGroup]=\"companyRegistrationForm\" class=\"company-registration-form\">\r\n\r\n          <mat-horizontal-stepper [linear]=\"isLinear\" #stepper [selectedIndex]=\"currentStep-1\" labelPosition=\"bottom\">\r\n\r\n            <!-- 'Step passed' sign-->\r\n            <ng-template matStepperIcon=\"edit\">\r\n              <mat-icon>done</mat-icon>\r\n            </ng-template>\r\n\r\n            <!-- Step 1 -->\r\n            <mat-step [stepControl]=\"companyInfo\">\r\n              <ng-template matStepLabel>Company info</ng-template>\r\n              <app-step1 [group]=\"companyInfo\" [stepper]=\"stepper\"></app-step1>\r\n            </mat-step>\r\n\r\n            <!-- Step 2 -->\r\n            <mat-step [stepControl]=\"accountInfo\">\r\n              <ng-template matStepLabel>Account info</ng-template>\r\n              <app-step2 [group]=\"accountInfo\"></app-step2>\r\n            </mat-step>\r\n\r\n            <!-- Step 3 -->\r\n            <mat-step>\r\n              <ng-template matStepLabel>Company details</ng-template>\r\n              <app-step3 [group]=\"contactDetails\" (registerCompany)=\"registerCompany()\"></app-step3>\r\n            </mat-step>\r\n          </mat-horizontal-stepper>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AbstractControl, FormGroup} from '@angular/forms';\nimport {INDUSTRY_LIST} from '../../../core/constants/industries';\nimport {COUNTRY_LIST} from '../../../core/constants/countries';\nimport {CompaniesService} from '../../../core/services/companies.service';\nimport {CommonService} from '../../../core/services/common.service';\n\n@Component({\n  selector: 'app-step1',\n  templateUrl: './step1.component.html',\n  styleUrls: ['./step1.component.css']\n})\nexport class Step1Component implements OnInit {\n  @Input('group') companyInfoFormGroup: FormGroup;\n  @Input('stepper') stepper;\n  industries = INDUSTRY_LIST;\n  countries = COUNTRY_LIST;\n  isSubmitted = false;\n\n  constructor(\n    private companiesService: CompaniesService,\n    public common: CommonService\n  ) {\n  }\n\n  ngOnInit(): void {\n  }\n\n  changeCountry(e) {\n    this.companyInfoFormGroup.patchValue({country: e.target.value});\n  }\n\n  changeIndustry(e) {\n    this.companyInfoFormGroup.patchValue({industry: e.target.value});\n  }\n\n  checkCompanyName(e) {\n    this.companiesService.checkCompanyName({name: e.target.value}).subscribe(dt => {\n      this.common.companyNameExists = false;\n    });\n  }\n\n  submit() {\n    this.isSubmitted = true;\n    if (this.common.companyNameExists) {\n      return false;\n    } else {\n      this.stepper.next();\n    }\n  }\n\n  get companyCtrl(): AbstractControl {\n    return this.companyInfoFormGroup.get('name');\n  }\n\n  get industryCtrl(): AbstractControl {\n    return this.companyInfoFormGroup.get('industry');\n  }\n\n  get countryCtrl(): AbstractControl {\n    return this.companyInfoFormGroup.get('country');\n  }\n\n}\n","<form [formGroup]=\"companyInfoFormGroup\">\r\n\r\n  <div class=\"register-block-1\">\r\n    <div>\r\n      <div class=\"login-item\">\r\n        <label class=\"logos-item-label\">Company Name</label>\r\n        <input formControlName=\"name\" class=\"logos-item-input\" placeholder=\"Company Name*\"\r\n               (keyup)=\"checkCompanyName($event)\">\r\n        <mat-error *ngIf=\"isSubmitted && companyCtrl.hasError('required')\">Company name is <strong>required</strong>\r\n        </mat-error>\r\n        <mat-error *ngIf=\"common.companyNameExists\">Company with such name <strong>exists</strong></mat-error>\r\n      </div>\r\n      <label for=\"industry\" class=\"logos-item-label\">Industry</label>\r\n      <select id=\"industry\" class=\"logos-item-input\" (change)=\"changeIndustry($event)\" formControlName=\"industry\">\r\n        <option selected disabled [value]=\"''\">Industry*</option>\r\n        <option *ngFor=\"let industry of industries\" [value]=\"industry\">\r\n          {{industry}}\r\n        </option>\r\n      </select>\r\n      <mat-error *ngIf=\"isSubmitted && industryCtrl.hasError('required')\">Industry is <strong>required</strong>\r\n      </mat-error>\r\n    </div>\r\n    <div>\r\n      <div class=\"login-item\">\r\n        <label for=\"country\" class=\"logos-item-label\">Country</label>\r\n        <select id=\"country\" class=\"logos-item-input\" (change)=\"changeCountry($event)\" formControlName=\"country\">\r\n          <option disabled selected [value]=\"''\">Country*</option>\r\n          <option *ngFor=\"let country of countries\" [value]=\"country\">{{country}}</option>\r\n        </select>\r\n      </div>\r\n      <mat-error *ngIf=\"isSubmitted && countryCtrl.hasError('required')\">Country is <strong>required</strong>\r\n      </mat-error>\r\n    </div>\r\n\r\n  </div>\r\n  <div class=\"last-block-form\">\r\n    <div class=\"register-buttons\">\r\n      <!--      <a class=\"reset-btn\"><i class=\"fas fa-chevron-left\"></i>Reset All</a>-->\r\n    </div>\r\n    <div class=\"register-buttons\">\r\n      <button class=\"login-btn\" (click)=\"submit()\">Next<i class=\"fas fa-chevron-right\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n","import {Component, Input, OnInit} from '@angular/core';\nimport {AbstractControl, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-step2',\n  templateUrl: './step2.component.html',\n  styleUrls: ['./step2.component.css']\n})\nexport class Step2Component implements OnInit {\n  @Input('group') accountInfo: FormGroup;\n  isSubmitted = false;\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n\n  /**\n   * First name field control getter\n   */\n  get firstName() {\n    return this.accountInfo.get(`first_name`);\n  }\n\n  /**\n   * Last name field control getter\n   */\n  get lastName(): AbstractControl {\n    return this.accountInfo.get(`last_name`);\n  }\n\n  /**\n   * E-mail field getter\n   */\n  get email(): AbstractControl {\n    return this.accountInfo.get('email');\n  }\n\n  /**\n   * Password field getter\n   */\n  get pass(): AbstractControl {\n    return this.accountInfo.get('password');\n  }\n\n  get gender(): AbstractControl {\n    return this.accountInfo.get('gender');\n  }\n\n  submit() {\n    this.isSubmitted = true\n    console.log(this.accountInfo.value);\n  }\n\n}\n","<form [formGroup]=\"accountInfo\">\r\n  <ng-template matStepLabel>Account info</ng-template>\r\n  <div class=\"register-block-1\">\r\n    <div>\r\n      <div class=\"login-item\">\r\n        <label class=\"logos-item-label\">First Name</label>\r\n        <input formControlName=\"first_name\" placeholder=\"First Name*\" class=\"logos-item-input\">\r\n        <mat-error *ngIf=\"isSubmitted && firstName.hasError('required')\">First name is\r\n          <strong>required</strong>\r\n        </mat-error>\r\n      </div>\r\n      <div class=\"login-item\">\r\n        <label class=\"logos-item-label\">Password</label>\r\n        <input type=\"password\" formControlName=\"password\" placeholder=\"Password*\" class=\"logos-item-input\">\r\n        <mat-error *ngIf=\"isSubmitted && pass.hasError('required')\">Password is <strong>required</strong>\r\n        </mat-error>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div class=\"login-item\">\r\n        <label class=\"logos-item-label\">Last Name</label>\r\n        <input formControlName=\"last_name\" placeholder=\"Last Name*\" class=\"logos-item-input\">\r\n        <mat-error *ngIf=\"isSubmitted && lastName.hasError('required')\">Last name is\r\n          <strong>required</strong>\r\n        </mat-error>\r\n      </div>\r\n      <div class=\"login-item\">\r\n        <label class=\"logos-item-label\">Gender</label>\r\n        <div class=\"gender\">\r\n          <div>\r\n            <input type=\"radio\" name=\"gender\" checked [value]=\"'male'\" id=\"male\" formControlName=\"gender\">\r\n            <label for=\"male\">Male</label>\r\n          </div>\r\n          <div>\r\n            <input type=\"radio\" name=\"gender\" [value]=\"'female'\" id=\"female\" formControlName=\"gender\">\r\n            <label for=\"female\">Female</label><br>\r\n          </div>\r\n        </div>\r\n        <mat-error *ngIf=\"isSubmitted && gender.hasError('required')\">Gender is <strong>required</strong>\r\n        </mat-error>\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n  <div class=\"last-block-form\">\r\n    <div class=\"register-buttons\">\r\n      <button class=\"reset-btn\" matStepperPrevious><i class=\"fas fa-chevron-left\"></i>Previous</button>\r\n    </div>\r\n    <div class=\"register-buttons\">\r\n      <button class=\"login-btn\" matStepperNext (click)=\"isSubmitted = true\">Next<i class=\"fas fa-chevron-right\"></i>\r\n      </button>\r\n    </div>\r\n  </div>\r\n</form>\r\n","import {Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\nimport {AbstractControl, FormGroup} from '@angular/forms';\nimport {COUNTRY_LIST} from '../../../core/constants/countries';\n\n@Component({\n  selector: 'app-step3',\n  templateUrl: './step3.component.html',\n  styleUrls: ['./step3.component.css']\n})\nexport class Step3Component implements OnInit {\n  @Input('group') companyDetailsFormGroup: FormGroup;\n  @Output('registerCompany') register = new EventEmitter();\n  isSubmitted = false;\n\n  constructor() {\n  }\n\n  ngOnInit(): void {\n  }\n\n  registerCompany() {\n    this.isSubmitted = true;\n    if (this.companyDetailsFormGroup.valid) {\n      this.register.emit();\n    }\n  }\n\n  /**\n   * E-mail field getter\n   */\n  get email(): AbstractControl {\n    return this.companyDetailsFormGroup.get('email');\n  }\n\n  get phone(): AbstractControl {\n    return this.companyDetailsFormGroup.get('phone');\n  }\n\n  get address(): AbstractControl {\n    return this.companyDetailsFormGroup.get('address');\n  }\n}\n","<form [formGroup]=\"companyDetailsFormGroup\">\r\n  <div class=\"register-block-1\">\r\n    <div>\r\n      <div class=\"login-item\">\r\n        <label class=\"logos-item-label\">Mobile Phone</label>\r\n        <input formControlName=\"phone\" placeholder=\"Mobile Phone*\" class=\"logos-item-input\">\r\n        <mat-error *ngIf=\"isSubmitted && phone.hasError('required')\">Phone is <strong>required</strong></mat-error>\r\n      </div>\r\n      <div class=\"login-item\">\r\n        <label class=\"logos-item-label\">Email</label>\r\n        <input formControlName=\"email\" placeholder=\"Email*\" class=\"logos-item-input\">\r\n        <mat-error *ngIf=\"isSubmitted && email.hasError('required')\">E-mail is <strong>required</strong></mat-error>\r\n        <mat-error *ngIf=\"isSubmitted && email.hasError('patternInvalid')\">E-mail is <strong>invalid</strong>\r\n        </mat-error>\r\n      </div>\r\n    </div>\r\n    <div>\r\n      <div class=\"login-item\">\r\n        <label class=\"logos-item-label\">Address</label>\r\n        <input formControlName=\"address\" placeholder=\"Address*\" class=\"logos-item-input\">\r\n        <mat-error *ngIf=\"isSubmitted && address.hasError('required')\">Address is <strong>required</strong></mat-error>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div class=\"last-block-form\">\r\n    <div class=\"register-buttons\">\r\n      <button class=\"reset-btn\" matStepperPrevious><i class=\"fas fa-chevron-left\"></i>Previous</button>\r\n    </div>\r\n    <div class=\"register-buttons\">\r\n      <a class=\"login-btn\" (click)=\"registerCompany()\">Sign Up</a>\r\n    </div>\r\n  </div>\r\n</form>\r\n\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-password',\r\n  templateUrl: './new-password.component.html',\r\n  styleUrls: ['./new-password.component.css']\r\n})\r\nexport class NewPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"reset-content\">\r\n  <div class=\"reset-block\">\r\n    <p class=\"reset-text-4\">New Password</p>\r\n    <div class=\"reset-block-2\">\r\n      <img src=\"assets/images/reset.png\">\r\n    </div>\r\n    <p class=\"reset-text-3\">Enter New Password which will be used to authorize you from now on.</p>\r\n    <div class=\"reset-item mb-5\">\r\n      <label class=\"reset-item-label\">Password</label>\r\n      <input class=\"reset-item-input\" placeholder=\"Password*\">\r\n    </div>\r\n    <div class=\"reset-item\">\r\n      <label class=\"reset-item-label\">Confirm Password</label>\r\n      <input class=\"reset-item-input\" placeholder=\"Confirm Password*\">\r\n    </div>\r\n    <div class=\"reset-buttons\">\r\n      <a class=\"reset-buttons-4\">Save New Password</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-receive-code',\r\n  templateUrl: './receive-code.component.html',\r\n  styleUrls: ['./receive-code.component.css']\r\n})\r\nexport class ReceiveCodeComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<div class=\"reset-content\">\r\n  <div class=\"reset-block\">\r\n    <p class=\"reset-text-1\">Enter Receive Code</p>\r\n    <div class=\"reset-block-2\">\r\n      <img class=\"receive-code-img\" src=\"assets/images/code-img.svg\">\r\n    </div>\r\n    <div class=\"reset-item mb-5 reset-item-code\">\r\n      <input class=\"reset-item-input\" placeholder=\"000-000-0000\">\r\n      <div class=\"reset-text-10\"><img src=\"assets/images/undo.png\">Resend Code</div>\r\n    </div>\r\n    <div class=\"reset-buttons\">\r\n      <a class=\"reset-buttons-4\">Confirm</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-reset-password',\r\n  templateUrl: './reset-password.component.html',\r\n  styleUrls: ['./reset-password.component.css']\r\n})\r\nexport class ResetPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"reset-content\">\r\n  <div class=\"reset-block\">\r\n    <p class=\"reset-text-1\">Reset Password</p>\r\n    <p class=\"reset-text-2\">Choose the versions of Reset Password.</p>\r\n    <div class=\"reset-header\">\r\n      <a class=\"reset-btn-1\"><img src=\"assets/images/mail.png\">White Email Address</a>\r\n      <a class=\"reset-btn-2\"><img src=\"assets/images/phone.png\"></a>\r\n    </div>\r\n    <div class=\"reset-block-2\">\r\n      <img src=\"assets/images/reset.png\">\r\n    </div>\r\n    <p class=\"reset-text-3\">We will send you a password reset link connected to your existing account.</p>\r\n    <div class=\"reset-item\">\r\n      <label class=\"reset-item-label\">Your E-mail</label>\r\n      <input class=\"reset-item-input\" placeholder=\"Richard_som@gmail.com\">\r\n    </div>\r\n    <div class=\"reset-item reset-phone-hide\">\r\n      <label class=\"reset-item-label\">Phone Number</label>\r\n      <input class=\"reset-item-input\" placeholder=\"Phone Number\">\r\n    </div>\r\n    <div class=\"reset-buttons\">\r\n      <a class=\"reset-buttons-1\"><i class=\"fas fa-chevron-left\"></i>Back</a>\r\n      <a class=\"reset-buttons-2\">Reset Password</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-sent-email',\r\n  templateUrl: './sent-email.component.html',\r\n  styleUrls: ['./sent-email.component.css']\r\n})\r\nexport class SentEmailComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"reset-content\">\r\n  <div class=\"reset-block\">\r\n    <p class=\"reset-text-4\">Password Reset Email Sent</p>\r\n    <div class=\"reset-block-2\">\r\n      <img src=\"assets/images/sent-email.png\">\r\n    </div>\r\n    <p class=\"reset-text-5\">\r\n      If <span class=\"reset-text-6\">Richard_som@gmail.com</span> is associated with an existing account, you will receive an email with instructions for reseting your password.\r\n    </p>\r\n    <p class=\"reset-text-5\">\r\n      If You did not receive any email from us with 15 minutes, please check your Spam holder. If there is still no email - <a class=\"reset-text-7\">click here to try again.</a>\r\n    </p>\r\n    <div class=\"reset-buttons\">\r\n      <a class=\"reset-buttons-3\"><i class=\"fas fa-chevron-left\"></i>Go Back</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-submitted-password',\r\n  templateUrl: './submitted-password.component.html',\r\n  styleUrls: ['./submitted-password.component.css']\r\n})\r\nexport class SubmittedPasswordComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"reset-content\">\r\n  <div class=\"reset-block\">\r\n    <p class=\"reset-text-4\">Password Reset Submitted</p>\r\n    <div class=\"reset-block-2\">\r\n      <img class=\"password-reset-img\" src=\"assets/images/submitted-password.png\">\r\n    </div>\r\n    <p class=\"reset-text-8\">Thank You</p>\r\n    <p class=\"reset-text-9\">\r\n      Your password has been successfully reset.\r\n    </p>\r\n    <div class=\"reset-buttons\">\r\n      <a class=\"reset-buttons-3\">Ok</a>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n","import {Component, OnInit} from '@angular/core';\r\nimport {Router} from '@angular/router';\r\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\r\nimport {AuthService} from '../../core/services/auth.service';\r\nimport {patternValidator} from '../../core/helpers/pattern-validator';\r\nimport {API_URL, EMAIL_PATTERN} from '../../core/constants/general';\r\nimport {passwordConfirmation} from '../../core/helpers/password-confirmation';\r\n\r\n@Component({\r\n  selector: 'app-user-sign-up',\r\n  templateUrl: './user-sign-up.component.html',\r\n  styleUrls: ['./user-sign-up.component.css']\r\n})\r\nexport class UserSignUpComponent implements OnInit {\r\n\r\n  userRegisterForm: FormGroup;\r\n  isSubmitted = false;\r\n  passwordsMatch = true;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    private fb: FormBuilder,\r\n    public auth: AuthService\r\n  ) {\r\n    this.userRegisterForm = this.fb.group({\r\n      email: new FormControl(null, {\r\n        validators: [Validators.required, patternValidator(EMAIL_PATTERN)]\r\n      }),\r\n      password: ['', Validators.required],\r\n      confirm_password: ['', Validators.required],\r\n      birthday: ['', Validators.required],\r\n      first_name: ['', Validators.required],\r\n      last_name: ['', Validators.required],\r\n      gender: ['male', Validators.required],\r\n      country: ['', Validators.required],\r\n      agreed: ['', Validators.required],\r\n\r\n    }, {validator: passwordConfirmation('password', 'confirm_password')});\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  register() {\r\n    this.isSubmitted = true;\r\n    if (this.userRegisterForm.valid) {\r\n      this.auth.register(this.userRegisterForm.value).subscribe((dt: any) => {\r\n        this.router.navigate(['/']);\r\n        localStorage.setItem('token', dt.token);\r\n      });\r\n    }\r\n  }\r\n\r\n  agreeTerms(e) {\r\n    this.userRegisterForm.patchValue({agreed: e.checked});\r\n  }\r\n\r\n  comparePasswords() {\r\n    this.passwordsMatch = this.pass.value === this.confirmPass.value;\r\n  }\r\n\r\n  getGoogleAuthUrl() {\r\n    return `${API_URL}auth/google`;\r\n  }\r\n  /**\r\n   * First name field control getter\r\n   */\r\n  get firstName() {\r\n    return this.userRegisterForm.get(`first_name`);\r\n  }\r\n\r\n  /**\r\n   * Last name field control getter\r\n   */\r\n  get lastName(): AbstractControl {\r\n    return this.userRegisterForm.get(`last_name`);\r\n  }\r\n\r\n  /**\r\n   * E-mail field getter\r\n   */\r\n  get email(): AbstractControl {\r\n    return this.userRegisterForm.get('email');\r\n  }\r\n\r\n  /**\r\n   * Password field getter\r\n   */\r\n  get pass(): AbstractControl {\r\n    return this.userRegisterForm.get('password');\r\n  }\r\n\r\n  get confirmPass(): AbstractControl {\r\n    return this.userRegisterForm.get('confirm_password');\r\n  }\r\n\r\n  get birthday(): AbstractControl {\r\n    return this.userRegisterForm.get('birthday');\r\n  }\r\n\r\n}\r\n","<section class=\"register-content\">\r\n  <div class=\"register-left-side\">\r\n    <a class=\"logo-back\" (click)=\"router.navigate(['/'])\">\r\n      <img src=\"assets/images/logo.png\">\r\n    </a>\r\n    <img class=\"register-big-img\" src=\"assets/images/login-1.svg\" (click)=\"router.navigate(['/'])\">\r\n    <div class=\"left-block-4\" (click)=\"router.navigate(['auth/user-registration'])\">\r\n      <div>\r\n        <img src=\"assets/images/img-30.svg\">\r\n        <div class=\"left-block-5\">\r\n          <p class=\"login-text-5\">Private</p>\r\n          <p class=\"login-text-8\">Personal</p>\r\n        </div>\r\n      </div>\r\n      <img src=\"assets/images/img-31.svg\">\r\n    </div>\r\n    <div class=\"left-block-4 active\" (click)=\"router.navigate(['auth/company-registration'])\">\r\n      <div>\r\n        <img src=\"assets/images/img-32.svg\">\r\n        <div class=\"left-block-5\">\r\n          <p class=\"login-text-5\">Company</p>\r\n          <p class=\"login-text-8\">Business</p>\r\n        </div>\r\n      </div>\r\n      <img src=\"assets/images/img-31.svg\">\r\n    </div>\r\n  </div>\r\n  <div class=\"register-right-side\">\r\n    <p class=\"register-text-1\">Have an account ? <a class=\"login-text-2\" (click)=\"router.navigate(['auth/login'])\">Sign\r\n      In Here</a></p>\r\n    <form class=\"register-form\" [formGroup]=\"userRegisterForm\">\r\n      <p class=\"login-text-3\">Sign Up</p>\r\n      <p class=\"login-text-4\">Choose the versions of Sign Up.</p>\r\n      <div class=\"login-block-1 mb-4\">\r\n        <a class=\"login-google\" [href]=\"getGoogleAuthUrl()\"><i class=\"fab fa-google\"></i>Sign Up With Google</a>\r\n      </div>\r\n      <p class=\"login-text-7\">Private</p>\r\n      <div class=\"line-block\">\r\n        <span class=\"line-1\"></span>\r\n        <span>OR</span>\r\n        <span class=\"line-1\"></span>\r\n      </div>\r\n      <div class=\"register-block-1\">\r\n        <div>\r\n          <div class=\"login-item\">\r\n            <label class=\"logos-item-label\">First Name</label>\r\n            <input class=\"logos-item-input\" placeholder=\"First Name*\" formControlName=\"first_name\">\r\n            <mat-error *ngIf=\"isSubmitted && firstName.hasError('required')\">First name is <strong>required</strong>\r\n            </mat-error>\r\n          </div>\r\n          <div class=\"login-item\">\r\n            <label class=\"logos-item-label\">Date Of Birth</label>\r\n            <div class=\"date-age\">\r\n\r\n              <input matInput [matDatepicker]=\"picker\" class=\"logos-small-input\" formControlName=\"birthday\">\r\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n              <mat-datepicker #picker></mat-datepicker>\r\n            </div>\r\n            <mat-error *ngIf=\"isSubmitted && birthday.hasError('required')\">Birth day is <strong>required</strong>\r\n            </mat-error>\r\n\r\n\r\n          </div>\r\n          <div class=\"login-item\">\r\n            <label class=\"logos-item-label\">Email</label>\r\n            <input class=\"logos-item-input\" placeholder=\"Email*\" formControlName=\"email\">\r\n            <mat-error *ngIf=\"isSubmitted && email.hasError('required')\">E-mail is <strong>required</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"isSubmitted && email.hasError('patternInvalid')\">E-mail is <strong>invalid</strong>\r\n            </mat-error>\r\n          </div>\r\n          <div class=\"login-item\">\r\n            <label class=\"logos-item-label\">Password</label>\r\n            <input class=\"logos-item-input\" placeholder=\"Password*\" type=\"password\" formControlName=\"password\">\r\n            <mat-error *ngIf=\"isSubmitted && pass.hasError('required')\">Password is <strong>required</strong>\r\n            </mat-error>\r\n          </div>\r\n          <div class=\"login-item register-checkbox\">\r\n            <mat-checkbox formControlName=\"agreed\" (change)=\"agreeTerms($event)\" id=\"terms\">\r\n              <span class=\"checkbox-text\">\r\n              Creating an account means you're okay with our <a>Terms of\r\n              Service,\r\n              Privacy\r\n              Policy,</a> and our default <a>Notification Settings.</a>\r\n              </span>\r\n            </mat-checkbox>\r\n            <div>\r\n              <mat-error *ngIf=\"isSubmitted && userRegisterForm.get('agreed').hasError('required')\">Please\r\n                <strong>agree</strong> to the terms\r\n              </mat-error>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div class=\"login-item\">\r\n            <label class=\"logos-item-label\">Last Name</label>\r\n            <input class=\"logos-item-input\" placeholder=\"Last Name*\" formControlName=\"last_name\">\r\n            <mat-error *ngIf=\"isSubmitted && lastName.hasError('required')\">Last name is <strong>required</strong>\r\n            </mat-error>\r\n          </div>\r\n          <div class=\"login-item\">\r\n            <label class=\"logos-item-label\">Country</label>\r\n            <select class=\"logos-item-input\" formControlName=\"country\">\r\n              <option>Country*</option>\r\n              <option>USA</option>\r\n              <option>China</option>\r\n            </select>\r\n            <mat-error *ngIf=\"isSubmitted && userRegisterForm.get('country').hasError('required')\">Country is <strong>required</strong>\r\n            </mat-error>\r\n          </div>\r\n          <div class=\"login-item\">\r\n            <label class=\"logos-item-label\">Gender</label>\r\n            <div class=\"gender logos-item-input border-0\">\r\n              <div>\r\n                <input type=\"radio\" id=\"male\" name=\"gender\" value=\"male\" formControlName=\"gender\">\r\n                <label for=\"male\">Male</label>\r\n              </div>\r\n              <div>\r\n                <input type=\"radio\" id=\"female\" name=\"gender\" value=\"female\" formControlName=\"gender\">\r\n                <label for=\"female\">Female</label><br>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"login-item\">\r\n            <label class=\"logos-item-label\">Confirm Password</label>\r\n            <input class=\"logos-item-input\" placeholder=\"Confirm Password*\" type=\"password\"\r\n                   formControlName=\"confirm_password\"\r\n                   (keyup)=\"comparePasswords()\">\r\n            <mat-error *ngIf=\"isSubmitted && confirmPass.hasError('required')\">Password is\r\n              <strong>required</strong>\r\n            </mat-error>\r\n            <mat-error *ngIf=\"!passwordsMatch && !confirmPass.hasError('required')\">Passwords doesn't match</mat-error>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"last-block-form\">\r\n        <div class=\"register-buttons\">\r\n          <a class=\"reset-btn\" (click)=\"userRegisterForm.reset()\">Reset All</a>\r\n        </div>\r\n        <div class=\"register-buttons\">\r\n          <a class=\"login-btn\" (click)=\"register()\">Sign Up</a>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</section>\r\n\r\n","export const COUNTRY_LIST = [\r\n  'Afghanistan',\r\n  'Albania',\r\n  'Algeria',\r\n  'American Samoa',\r\n  'Andorra',\r\n  'Angola',\r\n  'Anguilla',\r\n  'Antarctica',\r\n  'Antigua and Barbuda',\r\n  'Argentina',\r\n  'Armenia',\r\n  'Aruba',\r\n  'Australia',\r\n  'Austria',\r\n  'Azerbaijan',\r\n  'Bahamas (the)',\r\n  'Bahrain',\r\n  'Bangladesh',\r\n  'Barbados',\r\n  'Belarus',\r\n  'Belgium',\r\n  'Belize',\r\n  'Benin',\r\n  'Bermuda',\r\n  'Bhutan',\r\n  'Bolivia (Plurinational State of)',\r\n  'Bonaire, Sint Eustatius and Saba',\r\n  'Bosnia and Herzegovina',\r\n  'Botswana',\r\n  'Bouvet Island',\r\n  'Brazil',\r\n  'British Indian Ocean Territory (the)',\r\n  'Brunei Darussalam',\r\n  'Bulgaria',\r\n  'Burkina Faso',\r\n  'Burundi',\r\n  'Cabo Verde',\r\n  'Cambodia',\r\n  'Cameroon',\r\n  'Canada',\r\n  'Cayman Islands (the)',\r\n  'Central African Republic (the)',\r\n  'Chad',\r\n  'Chile',\r\n  'China',\r\n  'Christmas Island',\r\n  'Cocos (Keeling) Islands (the)',\r\n  'Colombia',\r\n  'Comoros (the)',\r\n  'Congo (the Democratic Republic of the)',\r\n  'Congo (the)',\r\n  'Cook Islands (the)',\r\n  'Costa Rica',\r\n  'Croatia',\r\n  'Cuba',\r\n  'Curaçao',\r\n  'Cyprus',\r\n  'Czechia',\r\n  'Côte d\\'Ivoire',\r\n  'Denmark',\r\n  'Djibouti',\r\n  'Dominica',\r\n  'Dominican Republic (the)',\r\n  'Ecuador',\r\n  'Egypt',\r\n  'El Salvador',\r\n  'Equatorial Guinea',\r\n  'Eritrea',\r\n  'Estonia',\r\n  'Eswatini',\r\n  'Ethiopia',\r\n  'Falkland Islands (the) [Malvinas]',\r\n  'Faroe Islands (the)',\r\n  'Fiji',\r\n  'Finland',\r\n  'France',\r\n  'French Guiana',\r\n  'French Polynesia',\r\n  'French Southern Territories (the)',\r\n  'Gabon',\r\n  'Gambia (the)',\r\n  'Georgia',\r\n  'Germany',\r\n  'Ghana',\r\n  'Gibraltar',\r\n  'Greece',\r\n  'Greenland',\r\n  'Grenada',\r\n  'Guadeloupe',\r\n  'Guam',\r\n  'Guatemala',\r\n  'Guernsey',\r\n  'Guinea',\r\n  'Guinea-Bissau',\r\n  'Guyana',\r\n  'Haiti',\r\n  'Heard Island and McDonald Islands',\r\n  'Holy See (the)',\r\n  'Honduras',\r\n  'Hong Kong',\r\n  'Hungary',\r\n  'Iceland',\r\n  'India',\r\n  'Indonesia',\r\n  'Iran (Islamic Republic of)',\r\n  'Iraq',\r\n  'Ireland',\r\n  'Isle of Man',\r\n  'Israel',\r\n  'Italy',\r\n  'Jamaica',\r\n  'Japan',\r\n  'Jersey',\r\n  'Jordan',\r\n  'Kazakhstan',\r\n  'Kenya',\r\n  'Kiribati',\r\n  'Korea (the Democratic People\\'s Republic of)',\r\n  'Korea (the Republic of)',\r\n  'Kuwait',\r\n  'Kyrgyzstan',\r\n  'Lao People\\'s Democratic Republic (the)',\r\n  'Latvia',\r\n  'Lebanon',\r\n  'Lesotho',\r\n  'Liberia',\r\n  'Libya',\r\n  'Liechtenstein',\r\n  'Lithuania',\r\n  'Luxembourg',\r\n  'Macao',\r\n  'Madagascar',\r\n  'Malawi',\r\n  'Malaysia',\r\n  'Maldives',\r\n  'Mali',\r\n  'Malta',\r\n  'Marshall Islands (the)',\r\n  'Martinique',\r\n  'Mauritania',\r\n  'Mauritius',\r\n  'Mayotte',\r\n  'Mexico',\r\n  'Micronesia (Federated States of)',\r\n  'Moldova (the Republic of)',\r\n  'Monaco',\r\n  'Mongolia',\r\n  'Montenegro',\r\n  'Montserrat',\r\n  'Morocco',\r\n  'Mozambique',\r\n  'Myanmar',\r\n  'Namibia',\r\n  'Nauru',\r\n  'Nepal',\r\n  'Netherlands (the)',\r\n  'New Caledonia',\r\n  'New Zealand',\r\n  'Nicaragua',\r\n  'Niger (the)',\r\n  'Nigeria',\r\n  'Niue',\r\n  'Norfolk Island',\r\n  'Northern Mariana Islands (the)',\r\n  'Norway',\r\n  'Oman',\r\n  'Pakistan',\r\n  'Palau',\r\n  'Palestine, State of',\r\n  'Panama',\r\n  'Papua New Guinea',\r\n  'Paraguay',\r\n  'Peru',\r\n  'Philippines (the)',\r\n  'Pitcairn',\r\n  'Poland',\r\n  'Portugal',\r\n  'Puerto Rico',\r\n  'Qatar',\r\n  'Republic of North Macedonia',\r\n  'Romania',\r\n  'Russian Federation (the)',\r\n  'Rwanda',\r\n  'Réunion',\r\n  'Saint Barthélemy',\r\n  'Saint Helena, Ascension and Tristan da Cunha',\r\n  'Saint Kitts and Nevis',\r\n  'Saint Lucia',\r\n  'Saint Martin (French part)',\r\n  'Saint Pierre and Miquelon',\r\n  'Saint Vincent and the Grenadines',\r\n  'Samoa',\r\n  'San Marino',\r\n  'Sao Tome and Principe',\r\n  'Saudi Arabia',\r\n  'Senegal',\r\n  'Serbia',\r\n  'Seychelles',\r\n  'Sierra Leone',\r\n  'Singapore',\r\n  'Sint Maarten (Dutch part)',\r\n  'Slovakia',\r\n  'Slovenia',\r\n  'Solomon Islands',\r\n  'Somalia',\r\n  'South Africa',\r\n  'South Georgia and the South Sandwich Islands',\r\n  'South Sudan',\r\n  'Spain',\r\n  'Sri Lanka',\r\n  'Sudan (the)',\r\n  'Suriname',\r\n  'Svalbard and Jan Mayen',\r\n  'Sweden',\r\n  'Switzerland',\r\n  'Syrian Arab Republic',\r\n  'Taiwan (Province of China)',\r\n  'Tajikistan',\r\n  'Tanzania, United Republic of',\r\n  'Thailand',\r\n  'Timor-Leste',\r\n  'Togo',\r\n  'Tokelau',\r\n  'Tonga',\r\n  'Trinidad and Tobago',\r\n  'Tunisia',\r\n  'Turkey',\r\n  'Turkmenistan',\r\n  'Turks and Caicos Islands (the)',\r\n  'Tuvalu',\r\n  'Uganda',\r\n  'Ukraine',\r\n  'United Arab Emirates (the)',\r\n  'United Kingdom of Great Britain and Northern Ireland (the)',\r\n  'United States Minor Outlying Islands (the)',\r\n  'United States of America (the)',\r\n  'Uruguay',\r\n  'Uzbekistan',\r\n  'Vanuatu',\r\n  'Venezuela (Bolivarian Republic of)',\r\n  'Viet Nam',\r\n  'Virgin Islands (British)',\r\n  'Virgin Islands (U.S.)',\r\n  'Wallis and Futuna',\r\n  'Western Sahara',\r\n  'Yemen',\r\n  'Zambia',\r\n  'Zimbabwe',\r\n  'Åland Islands'\r\n];\r\n","export const INDUSTRY_LIST = [\r\n'Accounting',\r\n'Airlines/Aviation',\r\n'Alternative Dispute Resolution',\r\n'Alternative Medicine',\r\n'Animation',\r\n'Apparel/Fashion',\r\n'Architecture/Planning',\r\n'Arts/Crafts',\r\n'Automotive',\r\n'Aviation/Aerospace',\r\n'Banking/Mortgage',\r\n'Biotechnology/Greentech',\r\n'Broadcast Media',\r\n'Building Materials',\r\n'Business Supplies/Equipment',\r\n'Capital Markets/Hedge Fund/Private Equity',\r\n'Chemicals',\r\n'Civic/Social Organization',\r\n'Civil Engineering',\r\n'Commercial Real Estate',\r\n'Computer Games',\r\n'Computer Hardware',\r\n'Computer Networking',\r\n'Computer Software/Engineering',\r\n'Computer/Network Security',\r\n'Construction',\r\n'Consumer Electronics',\r\n'Consumer Goods',\r\n'Consumer Services',\r\n'Cosmetics',\r\n'Dairy',\r\n'Defense/Space',\r\n'Design',\r\n'E-Learning',\r\n'Education Management',\r\n'Electrical/Electronic Manufacturing',\r\n'Entertainment/Movie Production',\r\n'Environmental Services',\r\n'Events Services',\r\n'Executive Office',\r\n'Facilities Services',\r\n'Farming',\r\n'Financial Services',\r\n'Fine Art',\r\n'Fishery',\r\n'Food Production',\r\n'Food/Beverages',\r\n'Fundraising',\r\n'Furniture',\r\n'Gambling/Casinos',\r\n'Glass/Ceramics/Concrete',\r\n'Government Administration',\r\n'Government Relations',\r\n'Graphic Design/Web Design',\r\n'Health/Fitness',\r\n'Higher Education/Acadamia',\r\n'Hospital/Health Care',\r\n'Hospitality',\r\n'Human Resources/HR',\r\n'Import/Export',\r\n'Individual/Family Services',\r\n'Industrial Automation',\r\n'Information Services',\r\n'Information Technology/IT',\r\n'Insurance',\r\n'International Affairs',\r\n'International Trade/Development',\r\n'Internet',\r\n'Investment Banking/Venture',\r\n'Investment Management/Hedge Fund/Private Equity',\r\n'Judiciary',\r\n'Law Enforcement',\r\n'Law Practice/Law Firms',\r\n'Legal Services',\r\n'Legislative Office',\r\n'Leisure/Travel',\r\n'Library',\r\n'Logistics/Procurement',\r\n'Luxury Goods/Jewelry',\r\n'Machinery',\r\n'Management Consulting',\r\n'Maritime',\r\n'Market Research',\r\n'Marketing/Advertising/Sales',\r\n'Mechanical or Industrial Engineering',\r\n'Media Production',\r\n'Medical Equipment',\r\n'Medical Practice',\r\n'Mental Health Care',\r\n'Military Industry',\r\n'Mining/Metals',\r\n'Motion Pictures/Film',\r\n'Museums/Institutions',\r\n'Music',\r\n'Nanotechnology',\r\n'Newspapers/Journalism',\r\n'Non-Profit/Volunteering',\r\n'Oil/Energy/Solar/Greentech',\r\n'Online Publishing',\r\n'Other Industry',\r\n'Outsourcing/Offshoring',\r\n'Package/Freight Delivery',\r\n'Packaging/Containers',\r\n'Paper/Forest Products',\r\n'Performing Arts',\r\n'Pharmaceuticals',\r\n'Philanthropy',\r\n'Photography',\r\n'Plastics',\r\n'Political Organization',\r\n'Primary/Secondary Education',\r\n'Printing',\r\n'Professional Training',\r\n'Program Development',\r\n'Public Relations/PR',\r\n'Public Safety',\r\n'Publishing Industry',\r\n'Railroad Manufacture',\r\n'Ranching',\r\n'Real Estate/Mortgage',\r\n'Recreational Facilities/Services',\r\n'Religious Institutions',\r\n'Renewables/Environment',\r\n'Research Industry',\r\n'Restaurants',\r\n'Retail Industry',\r\n'Security/Investigations',\r\n'Semiconductors',\r\n'Shipbuilding',\r\n'Sporting Goods',\r\n'Sports',\r\n'Staffing/Recruiting',\r\n'Supermarkets',\r\n'Telecommunications',\r\n'Textiles',\r\n'Think Tanks',\r\n'Tobacco',\r\n'Translation/Localization',\r\n'Transportation',\r\n'Utilities',\r\n'Venture Capital/VC',\r\n'Veterinary',\r\n'Warehousing',\r\n'Wholesale',\r\n'Wine/Spirits',\r\n'Wireless',\r\n'Writing/Editing',\r\n];\r\n","import {FormGroup} from '@angular/forms';\r\n\r\nexport function passwordConfirmation(key: string, confirmationKey: string) {\r\n  return (group: FormGroup) => {\r\n    const input = group.controls[key];\r\n    const confirmationInput = group.controls[confirmationKey];\r\n    return confirmationInput.setErrors(\r\n      input.value !== confirmationInput.value ? {notEquivalent: true} : null\r\n    );\r\n  };\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {API_URL} from '../constants/general';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CompaniesService {\n\n  constructor(\n    private httpClient: HttpClient\n  ) {\n  }\n\n  register(params) {\n    return this.httpClient.post(`${API_URL}companies/register`, params);\n  }\n\n  checkCompanyName(params) {\n    return this.httpClient.get(`${API_URL}companies/check-name`, {params});\n  }\n}\n"],"sourceRoot":"webpack:///"}